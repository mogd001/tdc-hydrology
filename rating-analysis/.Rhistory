rating_change_df %>%
filter(site == site)
site
x <- site
x
rating_change_df %>%
filter(site == x)
rmarkdown::render(
"rating_analysis_output.Rmd",
output_file = paste(
"outputs/rating-analysis.",
Sys.Date(),
".",
site,
".html",
sep = ""
)
)
shiny::runApp()
get_flow_sites <- function(hts_dsn_fp) {
# Get sites which have flow from hts/dsn file
measurement <- "Flow [Water Level]"
conn <- HilltopData(hts_dsn_fp)
all_sites <- SiteList(conn)
all_sites <- all_sites[grepl("^HY ", all_sites)]
flow_sites <-
SiteList(conn, measurement = c("Flow [Water Level]"))
disconnect(conn)
}
get_flow-sites("http://envdata.tasman.govt.nz/data.hts?")
get_flow_sites("http://envdata.tasman.govt.nz/data.hts?")
hydro_working_dsn <-r"{\\tsrvfiles\hydrology\Datafiles\Hydro-Working.dsn}"
get_flow_sites(hydro_working_dsn)
x <- get_flow_sites(hydro_working_dsn)
x
hts_dsn_fp <- r"{\\tsrvfiles\hydrology\Datafiles\Hydro-Working.dsn}"
get_flow_sites(hts_dsn_fp)
x < - hts_dsn_fp
x <- get_flow_sites(hts_dsn_fp)
x
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower)
hydro_working_dsn <-r"{\\tsrvfiles\hydrology\Datafiles\Hydro-Working.dsn}"
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower)
conn <- HilltopData(hts_dsn_fp)
all_sites <- SiteList(conn)
all_sites
all_sites <- all_sites[grepl("^HY ", all_sites)]
flow_sites <-
SiteList(conn, measurement = c("Flow [Water Level]"))
flow_sites
disconnect(conn)
get_flow_sites <- function(hts_dsn_fp) {
# Get sites which have flow from hts/dsn file
measurement <- "Flow [Water Level]"
conn <- HilltopData(hts_dsn_fp)
all_sites <- SiteList(conn)
all_sites <- all_sites[grepl("^HY ", all_sites)]
flow_sites <-
SiteList(conn, measurement = c("Flow [Water Level]"))
disconnect(conn)
return(flow_sites)
}
get_flow_sites(hts_dsn_fp)
flow_sites <- get_flow_sites(hts_dsn_fp)
flow_sites
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower) %>%
filter(sites %in% c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery"))
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower) %>%
filter(site %in% c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery"))
sits
sites
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower)
sites
View(sites)
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower) %>%
filter(site %in% c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans Bend",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery"))
sites
rating_change_df <- read_excel(r"{\\tsrvfiles\HYDROLOGY\Instruction Documents\Office Docs\R_Shared\Rating_Analysis_Methodology_Refinement\Rating_Change_Documents\rating_change_register.xlsx}",
sheet = "main") %>%
mutate(site = as.factor(site),
date_review = ymd_hms(paste0(date_review, " 00:00:00"), tz = "NZ"),
date_new_rating =  ymd_hms(paste0(date_new_rating, " 00:00:00"), tz = "NZ"))
rating_change_df
view(rating_change_df)
# Compiled table of all the rating changes/adjustments at each site
rating_change_df <- read_excel(r"{\\tsrvfiles\HYDROLOGY\Instruction Documents\Office Docs\R_Shared\Rating_Analysis_Methodology_Refinement\Rating_Change_Documents\rating_change_register.xlsx}",
sheet = "main") %>%
mutate(site = as.factor(site),
date_review = ymd_hms(paste0(date_review, " 00:00:00"), tz = "NZ"),
date_new_rating =  ymd_hms(paste0(date_new_rating, " 00:00:00"), tz = "NZ")) %>%
drop_na(date_new_rating)
rating_change_df
View(rating_change_df)
#site <- "HY Motueka at Gorge" # operative flow start 20191001
#site <- "HY Waingaro at Hanging Rock"
start_date <- "20200101"
library(rmarkdown)
#site <- "HY Takaka at Kotinga"
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower) %>%
filter(site %in% c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans Bend",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery"))
#site <- "HY Motueka at Gorge" # operative flow start 20191001
#site <- "HY Waingaro at Hanging Rock"
start_date <- "20200101"
# end_date <- "20220101"
end_date <- format(Sys.Date(), format = "%Y%m%d")
no_report_sites <- c()
for (site in sites$site) {
print(site)
tryCatch({
rmarkdown::render(
"rating_analysis_output.Rmd",
output_file = paste(
"outputs/rating-analysis.",
Sys.Date(),
".",
site,
".html",
sep = ""
)
)
},
error = function(err) {
print(site)
no_report_sites <- append(no_report_sites, site)
})
}
print(no_report_sites)
runApp()
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower) %>%
filter(site %in% c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans Bend",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery")
sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower) %>%
filter(site %in% c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans Bend",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery"))
sites
library(Hilltop)
library(tidyverse)
library(XML)
library(xml2)
library(httr)
library(lubridate)
SiteList
?SiteList
sites <- get_sites_hilltop_server()
source("functons.R")
source("functions.R")
sites <- get_sites_hilltop_server()
sites
sites <- get_sites_hilltop_server()
site_choices <- c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans Bend",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery")
flow_sites <- get_flow_sites(hydro_working_dsn) %>%
as_tibble() %>%
rename_with(tolower) %>%
filter(site %in% site_choices)
site_chocies
site_choices
runApp()
runApp()
# Compiled table of all the rating changes/adjustments at each site
rating_change_df <- read_excel(r"{https://tasmandc.sharepoint.com/:x:/r/sites/enviromonitor/_layouts/15/Doc.aspx?sourcedoc=%7B6EBE98D9-31EF-4300-9A0F-3F88A9932D08%7D&file=Rating%20Change%20Register.xlsx&action=default&mobileredirect=true}",
sheet = "main") %>%
mutate(site = as.factor(site),
date_review = ymd_hms(paste0(date_review, " 00:00:00"), tz = "NZ"),
date_new_rating =  ymd_hms(paste0(date_new_rating, " 00:00:00"), tz = "NZ")) %>%
drop_na(date_new_rating)
rating_change_df <- read_excel(r"{https://tasmandc.sharepoint.com/:x:/r/sites/enviromonitor/_layouts/15/Doc.aspx?sourcedoc=%7B6EBE98D9-31EF-4300-9A0F-3F88A9932D08%7D&file=Rating%20Change%20Register.xlsx&action=default&mobileredirect=true}",
sheet = "main") %>%
mutate(site = as.factor(site),
date_review = ymd_hms(paste0(date_review, " 00:00:00"), tz = "NZ"),
date_new_rating =  ymd_hms(paste0(date_new_rating, " 00:00:00"), tz = "NZ")) %>%
drop_na(date_new_rating)
# Compiled table of all the rating changes/adjustments at each site
rating_change_df <- read_excel(r"//tasmandc.sharepoint.com/:x:/r/sites/enviromonitor/_layouts/15/Doc.aspx?sourcedoc=%7B6EBE98D9-31EF-4300-9A0F-3F88A9932D08%7D&file=Rating%20Change%20Register.xlsx&action=default&mobileredirect=true}",
sheet = "main") %>%
mutate(site = as.factor(site),
date_review = ymd_hms(paste0(date_review, " 00:00:00"), tz = "NZ"),
date_new_rating =  ymd_hms(paste0(date_new_rating, " 00:00:00"), tz = "NZ")) %>%
drop_na(date_new_rating)
rating_change_df <- read_excel(r"//tasmandc.sharepoint.com/:x:/r/sites/enviromonitor/_layouts/15/Doc.aspx?sourcedoc=%7B6EBE98D9-31EF-4300-9A0F-3F88A9932D08%7D&file=Rating%20Change%20Register.xlsx}",
sheet = "main") %>%
mutate(site = as.factor(site),
date_review = ymd_hms(paste0(date_review, " 00:00:00"), tz = "NZ"),
date_new_rating =  ymd_hms(paste0(date_new_rating, " 00:00:00"), tz = "NZ")) %>%
drop_na(date_new_rating)
rating_change_df <- read_excel("//tasmandc.sharepoint.com/:x:/r/sites/enviromonitor/_layouts/15/Doc.aspx?sourcedoc=%7B6EBE98D9-31EF-4300-9A0F-3F88A9932D08%7D&file=Rating%20Change%20Register.xlsx",
sheet = "main") %>%
mutate(site = as.factor(site),
date_review = ymd_hms(paste0(date_review, " 00:00:00"), tz = "NZ"),
date_new_rating =  ymd_hms(paste0(date_new_rating, " 00:00:00"), tz = "NZ")) %>%
drop_na(date_new_rating)
install.packages("Microsoft365R")
list_sharepoint_sites()
library(Microsoft365R)
list_sharepoint_sites()
library(Microsoft365R)
list_sharepoint_sites()
install.packages("Microsoft365R")
library(Microsoft365R)
list_sharepoint_sites()
rating_change_df <- read_excel("//tasmandc.sharepoint.com/:x:/r/sites/enviromonitor/_layouts/15/Doc.aspx?sourcedoc=%7B6EBE98D9-31EF-4300-9A0F-3F88A9932D08%7D&file=Rating%20Change%20Register.xlsx",
sheet = "main")
library(tidyverse)
library(readxl)
library(lubridate)
rating_change_df <- read_excel("//tasmandc.sharepoint.com/:x:/r/sites/enviromonitor/_layouts/15/Doc.aspx?sourcedoc=%7B6EBE98D9-31EF-4300-9A0F-3F88A9932D08%7D&file=Rating%20Change%20Register.xlsx",
sheet = "main")
site <- sharepoint_site("https://tasmandc.sharepoint.com/sites/enviromonitor")
library(Microsoft365R)
site <- sharepoint_site("https://tasmandc.sharepoint.com/sites/enviromonitor")
library(tidyverse)
library(readxl)
library(lubridate)
rating_change_df <- read_excel("data/Rating Change Register.xlsx",
sheet = "main") %>%
mutate(site = as.factor(site),
date_review = ymd_hms(paste0(date_review, " 00:00:00"), tz = "NZ"),
date_new_rating =  ymd_hms(paste0(date_new_rating, " 00:00:00"), tz = "NZ")) %>%
drop_na(date_new_rating)
rating_change_df
rating_change_df$date_new_rating
library(tdcR)
ratings
# -- Load ratings and gauging for site
ratings <- load_ratings(endpoint, site, start_date, end_date)
end_date
start_date
collections <- get_collections()
collections
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
from = "20220201", to = "", interval = "1 hour")
library(shiny) # for interactivity
library(leaflet) # for mapping
library(tdcR)
sites <- get_sites()
collections <- get_collections()
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
from = "20220201", to = "", interval = "1 hour")
library(shiny) # for interactivity
library(leaflet) # for mapping
library(tdcR)
from = "20220201", to = "", interval = "1 hour")
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
from = "20220201", to = "", interval = "1 hour")
flow_data
flow_data
flow_data %>% filter(site == "HY Motueka at Gorge")
flow_data
fow_data$site
flow_data$site
flow_data %>% filter(site == "HY Motueka at Gorge")
flow_data %>%
filter(site == "HY Motueka at Gorge")
flow_data %>%  filter(site %in% site_choices)
flow_data
library(dplyr)
flow_data %>%  filter(site %in% site_choices)
library(tidyerse)
library(tidyverse)
flow_data %>%
filter(site == "HY Motueka at Gorge")
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
time_interval = NA, from = "20220201", to = "", interval = "1 hour") %>%
filter(site %in% site_choices)
site_choices <- c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans Bend",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery")
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
time_interval = NA, from = "20220201", to = "", interval = "1 hour") %>%
filter(site %in% site_choices)
site_choices
flow_data %>%
filter(site == "HY Motueka at Gorge")
compare_data <- flow_data %>%
filter(site == "HY Motueka at Gorge")
compare_data
check <- flow_data %>%
filter(site == "HY Motueka at Gorge") %>%
filter(month = "Feb")
check <- flow_data %>%
filter(site == "HY Motueka at Gorge") %>%
filter(month == "Feb")
check
check <- flow_data %>%
filter(site == "HY Motueka at Gorge") %>%
filter(month == "Feb") %>%
rename(flow = value)
ggplot(check, aes(datetime, value)) +
geom_point()
#plot Feb average hourly flows
ggplot(check, aes(datetime, flow)) +
geom_point()
ggplot(check, aes(datetime, flow)) +
geom_point() +
geom_smooth()
ggplot(check, aes(datetime, flow)) +
geom_point() +
geom_smooth(method = "lm")
library(plotly)
g <- ggplot(check, aes(datetime, flow)) +
geom_point()
ggploty(g)
library(plotly)
ggploty(g)
library(plotly)
ggploty(g)
ggplotly(g)
g <- ggplot(check, aes(datetime, flow)) +
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, aes(datetime, flow)) +
geom_point(shape = 3, size = 2, color = "blue") +
facet_wrap(~site)
ggplotly(g)
g
check <- flow_data %>%
filter(month == "Feb") %>%
rename(flow = value)
g <- ggplot(check, aes(datetime, flow)) +
geom_point(shape = 3, size = 2, color = "blue") +
facet_wrap(~site)
g
ggplotly(g)
check <- flow_data %>%
filter(site == "HY Motueka at Gorge"& month == "Feb") %>%
rename(flow = value)
g <- ggplot(check, aes(datetime, flow)) +
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, aes(datetime, flow)) +
geom_path()
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, aes(datetime, flow)) +
geom_path() +
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, aes(datetime, flow)) +
geom_step(color = "red", alpha = 0.3) +
geom_path(color = "green", alpha = 0.3) +
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, aes(datetime, flow)) +
geom_path(color = "green", alpha = 0.3) +
geom_step(color = "red", alpha = 0.3) +
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, aes(datetime, flow)) +
geom_path(color = "green") +
geom_step(color = "red", alpha = 0.3) +
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
geom_line(color = "green") +
geom_step(color = "red", alpha = 0.3) +
geom_point(shape = 3, size = 2, color = "blue")
g <- ggplot(check, aes(datetime, flow)) +
geom_line(color = "green") +
geom_step(color = "red", alpha = 0.3) +
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, ) +
geom_line(aes(datetime, flow), color = "green") +
geom_step(aes(datetime, flow), color = "red", alpha = 0.3) +
geom_point(aes(datetime, flow), shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, ) +
geom_line(aes(datetime, flow), color = "green") +
#geom_step(aes(datetime, flow), color = "red", alpha = 0.3) +
geom_point(aes(datetime, flow), shape = 3, size = 2, color = "blue")
ggplotly(g)
g <- ggplot(check, ) +
geom_line(aes(datetime, flow), color = "green") +
geom_point(aes(datetime, flow), shape = 3, size = 2, color = "blue") +
geom_step(aes(datetime, flow), color = "red", alpha = 0.3)
ggplotly(g)
g <- ggplot(check, aes(datetime, flow)) +
geom_step(color = "red", alpha = 0.3) +
geom_point(shape = 3, size = 2, color = "blue")
ggplotly(g)
runApp('app')
sites %>%
filter(site %in% site_choices)
sites %>%
filter(site %in% site_choices)
sites <- get_sites()
sites %>%
filter(site %in% site_choices)
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
time_interval = NA, from = "20220701", to = "", interval = "1 hour") %>%
rename(flow = value) %>%
filter(site %in% site_choices)
library(shiny) # for interactivity
library(leaflet) # for mapping
library(tdcR)
library(tidyverse)
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
time_interval = NA, from = "20220701", to = "", interval = "1 hour") %>%
rename(flow = value) %>%
filter(site %in% site_choices)
library(shiny) # for interactivity
library(leaflet) # for mapping
library(tdcR)
library(tidyverse)
sites <- get_sites()
collections <- get_collections()
site_choices <- c("HY Motueka at Gorge", "HY Anatoki at Happy Sams",
"HY Aorere at Devils Boots", "HY Motueka at Woodmans Bend",
"HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
"HY Motupiko at Christies", "HY Waimea at TDC Nursery")
sites %>%
filter(site %in% site_choices)
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
time_interval = NA, from = "20220701", to = "", interval = "1 hour") %>%
rename(flow = value) %>%
filter(site %in% site_choices)
flow_data <- get_data(collection = "ActiveFlowSites", method = "Average",
time_interval = NA, from = "20220601", to = "", interval = "1 hour") %>%
rename(flow = value) %>%
filter(site %in% site_choices)
flow_data
sites
sites %>%
filter(site %in% site_choices)
sites
sites <- get_sites() %>%
filter(site %in% site_choices)
sites
runApp('app')
runApp()
runApp('app')
library(shiny) # for interactivity
library(leaflet) # for mapping
library(tdcR)
library(tidyverse)
library(plotly)
sites <- get_sites() %>%
filter(site %in% site_choices)
sites <- get_sites()
sites
collections <- get_collections()
collections
out_df <- sites %>% left_join(collections, by = "site")
out_df
collectons
collections
out_df <- colections %>% left_join(sites, by = "site")
out_df <- collections %>% left_join(sites, by = "site")
out-df
out_df
write.csv(out_df, "20220708_hydro_sites.csv")
shiny::runApp('rating-analysis-app')
library(shiny) # for interactivity
library(leaflet) # for mapping
library(tdcR)
library(tidyverse)
library(lubridate)
site_choices <- get_collections() %>%
filter(collection == "ActiveFlowSites") %>%
arrange(site) %>%
pull(site)
site_choices <- append(c("All Sites"), site_choices)
# site_choices <- c(
#   "All Sites", "HY Motueka at Gorge", "HY Anatoki at Happy Sams",
#   "HY Aorere at Devils Boots", "HY Motueka at Woodmans Bend",
#   "HY Wangapeka at Walter Peak", "HY Tadmor at Mudstone",
#   "HY Motupiko at Christies", "HY Waimea at TDC Nursery"
# )
sites <- get_sites() %>%
filter(site %in% site_choices)
start_date_default <- ymd("2022-06-01")
end_date_default <- as.Date(now())
end_date_default
runApp('rating-analysis-app')
shiny::runApp('rating-analysis-app')
runApp('rating-analysis-app')
